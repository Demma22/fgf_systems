name: Django CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version:
          - '3.10'

    env:
      DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
      DATABASE_URL: ${{ secrets.DATABASE_URL }}

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: mydatabase
          POSTGRES_USER: mydatabaseuser
          POSTGRES_PASSWORD: mydatabasepassword
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache Dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install django==5.*  # Update to Django 5

      - name: Debug Database Configuration
        run: |
          echo "DATABASE_URL: $DATABASE_URL"
          # Add more debugging commands as needed

      - name: Set up environment variables
        run: |
          echo "DJANGO_SECRET_KEY=$DJANGO_SECRET_KEY" >> $GITHUB_ENV
          echo "DATABASE_URL=$DATABASE_URL" >> $GITHUB_ENV

      - name: Run Migrations
        run: |
          echo "Before Migrations"
          python manage.py migrate
          echo "After Migrations"

      - name: Collect Static Files
        run: python manage.py collectstatic --noinput

      - name: Run Tests
        run: |
          python manage.py test
