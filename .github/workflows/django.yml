name: Build and Deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Set DATABASE_URL for Django Tests
        run: echo "DATABASE_URL=${DATABASE_URL}" >> $GITHUB_ENV

      - name: Set DJANGO_SECRET_KEY for Django Tests
        run: echo "DJANGO_SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }}" >> $GITHUB_ENV

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r ${{ github.workspace }}/requirements.txt

      - name: Run Tests
        run: python manage.py test

  deploy:
    runs-on: ubuntu-latest
    needs: [build_and_test]
    steps:
      - name: Set DATABASE_URL for Deployment
        run: echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> $GITHUB_ENV

      - name: Set DJANGO_SECRET_KEY for Deployment
        run: echo "DJANGO_SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }}" >> $GITHUB_ENV

      - name: Deploy to Production
        run: |
          # Add your deployment script or commands here
          # Example: You might want to run migrations and collect static files
          python manage.py migrate
          python manage.py collectstatic --noinput

      - name: Echo Deployment Status
        run: echo "Deployment to Production Completed"

# Add any additional steps or jobs as needed
